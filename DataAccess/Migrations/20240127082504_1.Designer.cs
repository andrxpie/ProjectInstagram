// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectInstagram.Data;

#nullable disable

namespace ProjectInstagram.Migrations
{
    [DbContext(typeof(InstagramDbContext))]
    [Migration("20240127082504_1")]
    partial class _1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AccountAccount", b =>
                {
                    b.Property<int>("SubscribersId")
                        .HasColumnType("int");

                    b.Property<int>("SubscribesId")
                        .HasColumnType("int");

                    b.HasKey("SubscribersId", "SubscribesId");

                    b.HasIndex("SubscribesId");

                    b.ToTable("AccountAccount");
                });

            modelBuilder.Entity("HashtagPost", b =>
                {
                    b.Property<int>("HashtagsId")
                        .HasColumnType("int");

                    b.Property<int>("PostsId")
                        .HasColumnType("int");

                    b.HasKey("HashtagsId", "PostsId");

                    b.HasIndex("PostsId");

                    b.ToTable("HashtagPost");
                });

            modelBuilder.Entity("ProjectInstagram.Data.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatartLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvatartLink = "https://i2-prod.mirror.co.uk/incoming/article11890336.ece/ALTERNATES/s1227b/Screen-Shot-2018-01-21-at-122505JPG.jpg",
                            Bio = "STEP student",
                            Login = "andrxpie"
                        },
                        new
                        {
                            Id = 2,
                            AvatartLink = "https://instagram.frwn2-1.fna.fbcdn.net/v/t51.2885-19/380816338_1735658720336521_8935098239096366940_n.jpg?stp=dst-jpg_s320x320&_nc_ht=instagram.frwn2-1.fna.fbcdn.net&_nc_cat=101&_nc_ohc=LGALrbRjtZUAX9Qz2YC&edm=AOQ1c0wBAAAA&ccb=7-5&oh=00_AfCC1z2l1JFGg0VHgvKribPDnUweNqAiZ7NV-5ylG-_FQA&oe=65B9E56A&_nc_sid=8b3546",
                            Bio = "University student",
                            Login = "dgmnkk"
                        });
                });

            modelBuilder.Entity("ProjectInstagram.Data.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("PostId");

                    b.ToTable("Comment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1,
                            Text = "Superoffo"
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 1,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1,
                            Text = "Poganoffo"
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 2,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1,
                            Text = "Positiffno"
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 2,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1,
                            Text = "Negatiffno"
                        });
                });

            modelBuilder.Entity("ProjectInstagram.Data.Entities.Hashtag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hashtags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Likes = 0,
                            Name = "#ukraine"
                        },
                        new
                        {
                            Id = 2,
                            Likes = 0,
                            Name = "#war"
                        },
                        new
                        {
                            Id = 3,
                            Likes = 0,
                            Name = "#gym"
                        },
                        new
                        {
                            Id = 4,
                            Likes = 0,
                            Name = "#usa"
                        },
                        new
                        {
                            Id = 5,
                            Likes = 0,
                            Name = "#train"
                        },
                        new
                        {
                            Id = 6,
                            Likes = 0,
                            Name = "#nowadays"
                        },
                        new
                        {
                            Id = 7,
                            Likes = 0,
                            Name = "#news"
                        },
                        new
                        {
                            Id = 8,
                            Likes = 0,
                            Name = "#it"
                        },
                        new
                        {
                            Id = 9,
                            Likes = 0,
                            Name = "#programm"
                        });
                });

            modelBuilder.Entity("ProjectInstagram.Data.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdvertised")
                        .HasColumnType("bit");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("MediaLinks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PostTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            Description = "ждав покі зупиняться",
                            IsAdvertised = true,
                            Likes = 43,
                            MediaLinks = "[\"https://i.pinimg.com/564x/56/8e/6f/568e6f0325a2388fd335b4557033e568.jpg\"]",
                            PostTime = new DateTime(2023, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 1,
                            Description = "",
                            IsAdvertised = true,
                            Likes = 30,
                            MediaLinks = "[\"https://i.pinimg.com/564x/76/e6/0d/76e60df836cb6b224f4134f964681af5.jpg\"]",
                            PostTime = new DateTime(2023, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 1,
                            Description = "",
                            IsAdvertised = false,
                            Likes = 30,
                            MediaLinks = "[\"https://i.pinimg.com/564x/50/7d/f3/507df3fa48c321a0aea520b3a76a0603.jpg\"]",
                            PostTime = new DateTime(2023, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ProjectInstagram.Data.Entities.Story", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("MediaLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Stories");
                });

            modelBuilder.Entity("AccountAccount", b =>
                {
                    b.HasOne("ProjectInstagram.Data.Entities.Account", null)
                        .WithMany()
                        .HasForeignKey("SubscribersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectInstagram.Data.Entities.Account", null)
                        .WithMany()
                        .HasForeignKey("SubscribesId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HashtagPost", b =>
                {
                    b.HasOne("ProjectInstagram.Data.Entities.Hashtag", null)
                        .WithMany()
                        .HasForeignKey("HashtagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectInstagram.Data.Entities.Post", null)
                        .WithMany()
                        .HasForeignKey("PostsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectInstagram.Data.Entities.Comment", b =>
                {
                    b.HasOne("ProjectInstagram.Data.Entities.Account", "Account")
                        .WithMany("Comments")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectInstagram.Data.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("ProjectInstagram.Data.Entities.Post", b =>
                {
                    b.HasOne("ProjectInstagram.Data.Entities.Account", "Account")
                        .WithMany("Posts")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("ProjectInstagram.Data.Entities.Story", b =>
                {
                    b.HasOne("ProjectInstagram.Data.Entities.Account", "Account")
                        .WithMany("SavedStories")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("ProjectInstagram.Data.Entities.Account", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Posts");

                    b.Navigation("SavedStories");
                });

            modelBuilder.Entity("ProjectInstagram.Data.Entities.Post", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
